// [ By Hiudy ] -- EN

module.exports = {
  // config.js || By Hiudy
  invalid_prefix: "❌ The prefix must be exactly 1 character long.",
  invalid_number: "❌ The number must contain only digits (10-15 characters).",
  example_number: "Example: 553399285117 (without symbols or spaces)",
  invalid_language: (valid) => `❌ Invalid language, the available languages are: ${valid.join(',')}`,
  config_cancelled: "🛑 Operation cancelled by the user.",
  installing_dependencies: "📦 Installing dependencies...",
  install_complete: "✔ Installation complete! Run 'npm start' to start the bot.",
  install_error: (message) => `❌ Installation error: ${message}`,
  manual_install_info: "ℹ️ You can try to install manually with: npm install --force --no-bin-links",
  config_welcome: (version) => `🔧 Nazuna Configurator - v${version}`,
  creator_message: "🚀 Created by Hiudy",
  existing_config_loaded: "ℹ️ Existing configuration loaded.",
  error_reading_config: (message) => `⚠ Error reading existing configuration: ${message}`,
  using_default_values: "ℹ️ Using default values.",
  basic_config_title: "BASIC CONFIGURATION",
  ask_owner_name: "👤 What is your name?",
  ask_owner_number: "📞 What is your number (digits only, 10-15)?",
  ask_bot_name: "🤖 What is the bot's name?",
  ask_prefix: "⚙️ What is the prefix (1 character)?",
  ask_language: "⚒️ What is the bot's language? (pt, en, es, id, fr)",
  config_summary: "📋 Configuration summary:",
  owner_name_summary: (name) => `Owner name: ${name}`,
  owner_number_summary: (number) => `Owner number: ${number}`,
  bot_name_summary: (name) => `Bot name: ${name}`,
  prefix_summary: (prefix) => `Bot prefix: ${prefix}`,
  language_summary: (lang) => `Bot language: ${lang}`,
  config_saved_success: "🎉 Configuration successfully saved!",
  ask_install_deps: "📦 Install dependencies now?",
  install_later_info: "⚡ To install later, use: npm run config:install",
  nazuna_ready: (version) => `🚀 Nazuna is ready to use! - v${version}`,
  error_saving_config: (message) => `❌ Error saving configuration: ${message}`,
  unexpected_error: (message) => `❌ Unexpected error: ${message}`,
  prompt_input_current: (value) => `(Current: ${value || 'Not set'})`,
  fatal_error: (message) => `❌ Fatal error: ${message}`,

  // start.js || By Hiudy
  shutting_down: "🛑 Shutting down the bot...",
  starter_header: "🚀 Nazuna Starter 🚀",
  starter_version: (version) => `🔧 Created by Hiudy - Version: ${version} 🔧`,
  config_not_found: "⚠ Oops! It seems you haven't configured the bot yet.",
  run_config_command: (command) => `🔹 To configure, run: ${command}`,
  modules_not_found: "⚠ Oops! It seems the modules haven't been installed yet.",
  run_install_command: (command) => `📦 To install, run: ${command}`,
  connection_file_not_found: (file) => `⚠ Connection file not found: ${file}`,
  check_installation: "Check if the bot was installed correctly.",
  starting_with_code: (dualMode) => `🚀 Starting the bot with code${dualMode ? ' (dual mode)' : ''}...`,
  starting_with_qrcode: (dualMode) => `🚀 Starting the bot with QR Code${dualMode ? ' (dual mode)' : ''}...`,
  error_starting_process: (message) => `❌ Error starting the process: ${message}`,
  bot_crashed: (code) => `⚠ The bot crashed with code: ${code}`,
  many_restarts: (count, seconds) => `⚠ Too many restarts (${count}). Waiting for ${seconds} seconds...`,
  restarting_bot: (seconds) => `⚠ The bot crashed! Restarting in ${seconds} seconds...`,
  error_checking_qr: (message) => `❌ Error checking QR Code directory: ${message}`,
  ask_connection_method: "🔗 How do you want to connect the bot?",
  qr_code_connection: "1. Connect via QR Code",
  code_connection: "2. Connect via Code",
  exit_option: "3. Exit",
  choose_option: "Choose an option (1/2/3): ",
  starting_qr_connection: "📡 Starting connection via QR Code...",
  starting_code_connection: "🔑 Starting connection via Code...",
  exiting: "👋 Exiting...",
  invalid_option_qr_default: "❌ Invalid option! Defaulting to QR Code.",
  qr_detected_auto_connect: "📡 QR Code already detected! Starting automatic connection...",

  // update.js || By Hiudy
  updater_header: "Nazuna Updater",
  checking_requirements: "Checking for prerequisites...",
  git_found: "✔ Git found.",
  git_not_found: "❌ Git not found. Git is required to continue.",
  git_download_win: "ℹ️ Download and install Git for Windows at: https://git-scm.com/download/win",
  git_install_mac: "ℹ️ Install Git on macOS via Homebrew ('brew install git') or Xcode Command Line Tools.",
  git_install_linux: "ℹ️ Install Git on Linux using your distribution's package manager (e.g., 'sudo apt-get install git').",
  npm_found: "✔ NPM found.",
  npm_not_found: "❌ NPM not found. NPM is required to install dependencies.",
  npm_download: "ℹ️ NPM comes with Node.js. Download and install it from: https://nodejs.org/",
  requirements_met: "✔ All prerequisites have been met.",
  update_warning: "WARNING: This process will replace the current bot files with the latest version.",
  backup_info: "ℹ️ A backup of 'config.json', 'database', and 'midias' will be created automatically.",
  cancel_info: "You can cancel at any time by pressing CTRL+C.",
  starting_in: (countdown) => `Starting the update in ${countdown} seconds...`,
  proceeding_with_update: "🚀 Proceeding with the update...",
  creating_backup: "📦 Creating a backup of your data...",
  copying_database: "Copying database...",
  copying_config: "Copying configuration file...",
  copying_media: "Copying media files...",
  backup_saved_at: (dir) => `✔ Backup successfully saved at: ${dir}`,
  error_creating_backup: (msg) => `❌ Error creating backup: ${msg}`,
  downloading_latest_version: "📥 Downloading the latest version from the repository...",
  cloning_repo: "Cloning repository...",
  downloading: "Downloading...",
  download_complete: "✔ Download complete.",
  failed_to_download: (msg) => `❌ Failed to download the update: ${msg}`,
  checking_github_connectivity: "Checking connectivity with GitHub...",
  permission_or_git_config_error: "It might be a permission or Git configuration error. Try running the terminal as an administrator.",
  internet_connection_error: "It seems to be an internet connection problem.",
  cleaning_old_files: "🧹 Cleaning old files...",
  removing_git_dir: "Removing old .git directory...",
  removing_package_json: "Removing old package.json...",
  removing_package_lock: "Removing old package-lock.json...",
  cleaning_data_dir: "Cleaning data directory (except backups)...",
  cleaning_complete: "✔ Cleaning complete.",
  error_cleaning_files: (msg) => `❌ Error cleaning old files: ${msg}`,
  applying_update: "⬆️ Applying the update...",
  copying_dir: (dir) => `Copying directory: ${dir}`,
  files_copied: (copied, total) => `Files copied: ${copied} of ${total}`,
  update_applied_success: "✔ Update applied successfully.",
  error_applying_update: (msg) => `❌ Error applying update: ${msg}`,
  restoring_backup: "🗂️ Restoring backup...",
  restoring_database: "Restoring database...",
  restoring_config: "Restoring configuration file...",
  restoring_media: "Restoring media files...",
  restore_success: "✔ Backup restored successfully.",
  error_restoring_backup: (msg) => `❌ Error restoring backup: ${msg}`,
  installing_deps: "📦 Installing new dependencies...",
  deps_installed_success: "✔ Dependencies installed successfully.",
  failed_to_install_deps: (msg) => `❌ Failed to install dependencies: ${msg}`,
  manual_install_prompt: "Try installing manually with 'npm install'.",
  finishing_up: "✨ Finishing up...",
  removing_backup_dir: "Removing temporary backup directory...",
  backup_removed: "Temporary backup removed.",
  error_cleaning_temp_files: (msg) => `❌ Error cleaning temporary files: ${msg}`,
  progress: (completed, total) => `Progress: [${completed}/${total}]`,
  fetching_commit_info: "🔍 Fetching information about the latest update...",
  error_fetching_commits: (status) => `❌ Error fetching commit information: ${status}`,
  update_complete_success: "🎉 Update completed successfully!",
  start_bot_prompt: "You can now start the bot with 'npm start'.",
  error_during_update: (msg) => `❌ A critical error occurred during the update: ${msg}`,
  backup_location_info: (dir) => `ℹ️ Your important data (config, database, midias) has been saved in: ${dir}`,
  manual_restore_info: "You can restore them manually by moving the files from the backup folder to the 'dados' folder.",
  contact_dev_for_help: "If the problem persists, contact the developer.",
  
  // connect.js || By Hiudy
  invalid_number: "❌ Invalid number! Must be between 10 and 15 digits.",
  ask_phone_number: "📞 Enter your number (with country and area code, e.g., +5511999999999): \n\n",
  pairing_code: (code) => `🔢 Your pairing code: ${code}`,
  pairing_instructions: "📲 On WhatsApp, go to 'Linked Devices' -> 'Link with Phone Number' and enter the code.\n",
  bot_started: (nomebot, prefixo, nomedono, dualMode) => `
============================================
Bot: ${nomebot}
Prefix: ${prefixo}
Owner: ${nomedono}
Creator: Hiudy
============================================
    ✅ BOT STARTED SUCCESSFULLY${dualMode ? ' (DUAL MODE)' : ''}
============================================`,
  starting_nazuna: (dualMode) => `🚀 Starting Nazuna ${dualMode ? '(Dual Mode)' : '(Single Mode)'}...`,
  starting_dual_mode: "🔀 Dual Mode activated - Starting secondary connection...",
  dual_mode_ready: "🔀 Both connections established - Dual mode ready!",
  secondary_connection_established: "🔀 Secondary connection established successfully!",
  secondary_connection_closed: (reason) => `🔀 Secondary connection closed, reason: ${reason}`,
  reconnecting_secondary: "🔀 Attempting to reconnect secondary connection...",
  error_starting_secondary: (err) => `🔀 Error starting secondary connection: ${err}`,
  continuing_primary_only: "🔀 Continuing with primary connection only...",
  error_starting_bot: (err) => `❌ Error starting the bot: ${err}`,
  primary_connection_closed: (reason, message) => `⚠️ Primary connection closed, reason: ${reason} - ${message}`,
  reconnecting_primary: "🔄 Attempting to reconnect primary connection...",
  updating_primary_session: "🔄 Updating primary session...",
  connecting_secondary_session: "🔀 Connecting secondary session...",
  invalid_index_module: "❌ The index.js module does not export a valid function.",
  error_processing_poll: (err) => `❌ Error processing poll update: ${err}`,
  error_calling_index: (err) => `❌ Error calling index.js module: ${err}`,
  error_removing_blacklist_user: (from, err) => `❌ Error removing blacklisted user from group ${from}: ${err}`,
  error_sending_welcome: (from, err) => `❌ Error sending welcome message in group ${from}: ${err}`,
  error_sending_exit: (from, err) => `❌ Error sending exit message in group ${from}: ${err}`,
  x9_mode_message: (participant, action, by) => `🕵️ *X9 Mode* 🕵️\n\n@${participant} was ${action} by @${by}!`,
  antifake_remove_message: (participant) => `🚫 @${participant} was removed for being from a disallowed country (antifake enabled)!`,
  antipt_remove_message: (participant) => `🚫 @${participant} was removed for being from Portugal (antipt enabled)!`,
  blacklist_remove_message: (participant, reason) => `🚫 @${participant} was automatically removed for being on the blacklist.\nReason: ${reason}`,
  welcome_message: (text, sender) => ({
    default: `Welcome @${sender} to #nomedogp#!\nYou are our member number: *#membros#*!`,
    custom: (text) => text,
  }),
  exit_message: (text, sender) => ({
    default: `Goodbye @${sender}! 👋\nThe group *#nomedogp#* now has *#membros#* members.`,
    custom: (text) => text,
  }),
  reason_messages: {
    401: "🗑️ Invalid session, deleting authentication...",
    408: "⏰ Session timed out, reloading...",
    411: "📄 Session file seems incorrect, attempting to reload...",
    428: "📡 Unable to maintain WhatsApp connection, trying again...",
    440: "🔗 Too many connected sessions, close some...",
    500: "⚙️ Session seems misconfigured, attempting to reconnect...",
    503: "❓ Unknown error, attempting to reconnect...",
    515: "🔄 Restarting code to stabilize connection...",
  }
};
